#!/usr/bin/env bash

set -ueo pipefail
trap "exit" INT

##################################
# Variables
readonly args=("$@")

readonly root_dir="$(pwd)"
readonly build_dir=$root_dir/target/@esm
readonly release_dir=$root_dir/release

# Annoying workaround for windows
readonly public_dir="$(dirname "$(dirname "$root_dir")")/Public/exile_server_manager/@esm"

readonly git_rev=$(git rev-parse --short HEAD)
readonly crate_version=$(
    cargo pkgid file://$(pwd)/src/esm | \
    cut -d# -f2 | \
    cut -d@ -f2
)
readonly zip_filename="@esm-$crate_version.$git_rev.zip"
readonly total_steps=9
step=0

##################################
# Functions
function echo_step() {
    ((step++)) || true
    echo "<esm_bt> - : ----------------------------------------"
    echo "<esm_bt> - : Step $step/$total_steps: $1"
    echo "<esm_bt> - : ----------------------------------------"
}

function run_command() {
    if ! "$@"; then
        echo "!!! Command failed: $*"
        return 1
    fi
}

##################################
# Preparation
echo_step "Preparing"
run_command rm -rf $build_dir
run_command rm -rf $public_dir
run_command rm -rf $release_dir
run_command mkdir -p $release_dir

##################################
# Run tests
echo_step "Running tests"
run_command cargo test --workspace --quiet

##################################
# Build @esm
echo_step "Building @esm"
run_command ./bin/build --only=mod --release --target=linux
run_command find $build_dir/addons -mindepth 1 -type d -exec rm -rf {} +
run_command rm -f $build_dir/addons/esm_test.pbo
run_command cp -rf $build_dir $release_dir

##################################
# Extension - Windows (x32)
echo_step "Building esm.dll"
run_command ./bin/build --only=extension --release --target=windows --x32
run_command cp $public_dir/esm.dll $release_dir/@esm

##################################
# Extension - Windows (x64)
echo_step "Building esm_x64.dll"
run_command ./bin/build --only=extension --release --target=windows
run_command cp $public_dir/esm_x64.dll $release_dir/@esm

##################################
# Extension - Linux (x32)
echo_step "Building esm.so"
run_command ./bin/build --only=extension --release --target=linux --x32
run_command cp $build_dir/esm.so $release_dir/@esm

##################################
# Extension - Linux (x64)
echo_step "Building esm_x64.so"
run_command ./bin/build --only=extension --release --target=linux
run_command cp $build_dir/esm_x64.so $release_dir/@esm

##################################
# Zipping
echo_step "Zipping $zip_filename"
cd $release_dir && zip -r $zip_filename ./@esm

##################################
# Woohoo!
echo_step "Build completed"
